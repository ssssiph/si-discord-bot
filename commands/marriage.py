import discord
from discord import app_commands
from discord.ext import commands
from db.db import execute_query
import time

async def setup(bot):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –±—Ä–∞–∫–æ–≤"""
    print("–î–æ–±–∞–≤–ª—è—é –∫–æ–º–∞–Ω–¥—ã marriage...")

    @bot.tree.command(name="propose", description="–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –±—Ä–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é")
    async def propose_command(interaction: discord.Interaction, user: discord.User):
        """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—Ä–∞–∫–∞"""
        proposer_id = interaction.user.id
        target_id = user.id
        if proposer_id == target_id:
            await interaction.response.send_message("‚ùå –ù–µ–ª—å–∑—è –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –±—Ä–∞–∫ —Å–µ–±–µ!", ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–∏—Ö –±—Ä–∞–∫–æ–≤
        marriages = execute_query(
            "SELECT partner_id FROM marriages WHERE user_id = %s",
            (proposer_id,),
            fetch_all=True
        )
        limit = execute_query(
            "SELECT marriage_limit FROM marriage_limits WHERE user_id = %s",
            (proposer_id,),
            fetch_one=True
        )
        limit = limit[0] if limit else 1
        if len(marriages) >= limit:
            await interaction.response.send_message("‚ùå –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞ –±—Ä–∞–∫–æ–≤!", ephemeral=True)
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π
        proposal = execute_query(
            "SELECT timestamp FROM marriage_proposals WHERE proposer_id = %s AND target_id = %s",
            (proposer_id, target_id),
            fetch_one=True
        )
        if proposal:
            await interaction.response.send_message("‚ùå –í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ —ç—Ç–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é!", ephemeral=True)
            return

        try:
            execute_query(
                "INSERT INTO marriage_proposals (proposer_id, target_id, timestamp) VALUES (%s, %s, %s)",
                (proposer_id, target_id, time.strftime("%Y-%m-%d %H:%M:%S"))
            )
            await interaction.response.send_message(
                f"üíç {interaction.user.mention} –ø—Ä–µ–¥–ª–æ–∂–∏–ª –±—Ä–∞–∫ {user.mention}! –û—Ç–≤–µ—Ç—å—Ç–µ —Å –ø–æ–º–æ—â—å—é `/accept` –∏–ª–∏ `/decline`.",
                ephemeral=False
            )
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞: {e}", ephemeral=True)

    @bot.tree.command(name="accept", description="–ü—Ä–∏–Ω—è—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—Ä–∞–∫–∞")
    async def accept_command(interaction: discord.Interaction, user: discord.User):
        """–ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—Ä–∞–∫–∞"""
        target_id = interaction.user.id
        proposer_id = user.id

        proposal = execute_query(
            "SELECT timestamp FROM marriage_proposals WHERE proposer_id = %s AND target_id = %s",
            (proposer_id, target_id),
            fetch_one=True
        )
        if not proposal:
            await interaction.response.send_message("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!", ephemeral=True)
            return

        try:
            execute_query(
                "INSERT INTO marriages (user_id, partner_id, timestamp) VALUES (%s, %s, %s), (%s, %s, %s)",
                (proposer_id, target_id, time.strftime("%Y-%m-%d %H:%M:%S"), target_id, proposer_id, time.strftime("%Y-%m-%d %H:%M:%S"))
            )
            execute_query(
                "DELETE FROM marriage_proposals WHERE proposer_id = %s AND target_id = %s",
                (proposer_id, target_id)
            )
            await interaction.response.send_message(
                f"üéâ {interaction.user.mention} –∏ {user.mention} —Ç–µ–ø–µ—Ä—å –≤ –±—Ä–∞–∫–µ!",
                ephemeral=False
            )
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞: {e}", ephemeral=True)

    @bot.tree.command(name="decline", description="–û—Ç–∫–ª–æ–Ω–∏—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—Ä–∞–∫–∞")
    async def decline_command(interaction: discord.Interaction, user: discord.User):
        """–û—Ç–∫–ª–æ–Ω—è–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±—Ä–∞–∫–∞"""
        target_id = interaction.user.id
        proposer_id = user.id

        proposal = execute_query(
            "SELECT timestamp FROM marriage_proposals WHERE proposer_id = %s AND target_id = %s",
            (proposer_id, target_id),
            fetch_one=True
        )
        if not proposal:
            await interaction.response.send_message("‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –æ—Ç —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!", ephemeral=True)
            return

        try:
            execute_query(
                "DELETE FROM marriage_proposals WHERE proposer_id = %s AND target_id = %s",
                (proposer_id, target_id)
            )
            await interaction.response.send_message(
                f"üíî {interaction.user.mention} –æ—Ç–∫–ª–æ–Ω–∏–ª –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –æ—Ç {user.mention}.",
                ephemeral=False
            )
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞: {e}", ephemeral=True)

    @bot.tree.command(name="divorce", description="–†–∞–∑–≤–µ—Å—Ç–∏—Å—å —Å –ø–∞—Ä—Ç–Ω—ë—Ä–æ–º")
    async def divorce_command(interaction: discord.Interaction, user: discord.User):
        """–†–∞–∑–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        user_id = interaction.user.id
        partner_id = user.id

        marriage = execute_query(
            "SELECT timestamp FROM marriages WHERE user_id = %s AND partner_id = %s",
            (user_id, partner_id),
            fetch_one=True
        )
        if not marriage:
            await interaction.response.send_message("‚ùå –í—ã –Ω–µ –≤ –±—Ä–∞–∫–µ —Å —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º!", ephemeral=True)
            return

        try:
            execute_query(
                "DELETE FROM marriages WHERE (user_id = %s AND partner_id = %s) OR (user_id = %s AND partner_id = %s)",
                (user_id, partner_id, partner_id, user_id)
            )
            await interaction.response.send_message(
                f"üíî {interaction.user.mention} –∏ {user.mention} —Ä–∞–∑–≤–µ–ª–∏—Å—å.",
                ephemeral=False
            )
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞: {e}", ephemeral=True)

    print("–ö–æ–º–∞–Ω–¥—ã marriage –¥–æ–±–∞–≤–ª–µ–Ω—ã!")
