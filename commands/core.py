import discord
from discord import app_commands
from discord.ext import commands
from db.db import execute_query

def setup(bot):
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥"""

    @bot.tree.command(name="setup", description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞")
    @app_commands.checks.has_permissions(administrator=True)
    async def setup_command(interaction: discord.Interaction, role_id: str, nickname_format: str = "{roblox-name}"):
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é: —Ä–æ–ª—å –∏ —Ñ–æ—Ä–º–∞—Ç –Ω–∏–∫–Ω–µ–π–º–∞"""
        guild_id = interaction.guild_id
        valid_formats = ["{roblox-name}", "{display-name}", "{roblox-id}", "{discord-name}"]
        if not any(fmt in nickname_format for fmt in valid_formats):
            await interaction.response.send_message(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–∏–∫–Ω–µ–π–º–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `{roblox-name}`, `{display-name}`, `{roblox-id}`, `{discord-name}`\n"
                "–ü—Ä–∏–º–µ—Ä: `{roblox-name} | {discord-name}`",
                ephemeral=True
            )
            return

        try:
            role = interaction.guild.get_role(int(role_id))
            if not role:
                await interaction.response.send_message("‚ùå –†–æ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!", ephemeral=True)
                return

            execute_query(
                "REPLACE INTO verification_settings (guild_id, role_id, username_format) VALUES (%s, %s, %s)",
                (guild_id, int(role_id), nickname_format)
            )
            await interaction.response.send_message(
                f"‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n–†–æ–ª—å: {role.mention}\n–§–æ—Ä–º–∞—Ç –Ω–∏–∫–Ω–µ–π–º–∞: `{nickname_format}`",
                ephemeral=True
            )
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏: {e}", ephemeral=True)

    @bot.tree.command(name="verify", description="–ù–∞—á–∞—Ç—å –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é Roblox")
    async def verify_command(interaction: discord.Interaction):
        """–ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
        await interaction.response.send_message(
            "üîó –ü–µ—Ä–µ–π–¥–∏—Ç–µ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏: https://siph-industry.com/verification",
            ephemeral=True
        )

    @bot.tree.command(name="unlink", description="–û—Ç–≤—è–∑–∞—Ç—å Roblox-–∞–∫–∫–∞—É–Ω—Ç")
    async def unlink_command(interaction: discord.Interaction):
        """–£–¥–∞–ª—è–µ—Ç –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        discord_id = interaction.user.id
        try:
            result = execute_query(
                "DELETE FROM verifications WHERE discord_id = %s",
                (discord_id,),
                fetch_one=True
            )
            if result:
                await interaction.response.send_message("‚úÖ –ê–∫–∫–∞—É–Ω—Ç –æ—Ç–≤—è–∑–∞–Ω!", ephemeral=True)
            else:
                await interaction.response.send_message("‚ùå –í—ã –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã!", ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞: {e}", ephemeral=True)

    @bot.tree.command(name="whois", description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")
    async def whois_command(interaction: discord.Interaction, user: discord.User):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏"""
        discord_id = user.id
        try:
            result = execute_query(
                "SELECT roblox_name, display_name, roblox_id, roblox_join_date FROM verifications WHERE discord_id = %s",
                (discord_id,),
                fetch_one=True
            )
            if result:
                roblox_name, display_name, roblox_id, join_date = result
                embed = discord.Embed(
                    title=f"–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è {user.display_name}",
                    color=discord.Color.green()
                )
                embed.add_field(name="Roblox –Ω–∏–∫", value=roblox_name, inline=True)
                embed.add_field(name="–û—Ç–æ–±—Ä–∞–∂–∞–µ–º–æ–µ –∏–º—è", value=display_name, inline=True)
                embed.add_field(name="Roblox ID", value=roblox_id, inline=True)
                embed.add_field(name="–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏", value=join_date, inline=True)
                await interaction.response.send_message(embed=embed, ephemeral=True)
            else:
                await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω!", ephemeral=True)
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞: {e}", ephemeral=True)

    @bot.tree.command(name="setnickname", description="–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ñ–æ—Ä–º–∞—Ç –Ω–∏–∫–Ω–µ–π–º–∞ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞")
    @app_commands.checks.has_permissions(administrator=True)
    async def setnickname_command(interaction: discord.Interaction, nickname_format: str):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ñ–æ—Ä–º–∞—Ç –Ω–∏–∫–Ω–µ–π–º–∞ –¥–ª—è –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        guild_id = interaction.guild_id
        valid_formats = ["{roblox-name}", "{display-name}", "{roblox-id}", "{discord-name}"]
        if not any(fmt in nickname_format for fmt in valid_formats):
            await interaction.response.send_message(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–∏–∫–Ω–µ–π–º–∞! –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `{roblox-name}`, `{display-name}`, `{roblox-id}`, `{discord-name}`\n"
                "–ü—Ä–∏–º–µ—Ä: `{roblox-name} | {discord-name}`",
                ephemeral=True
            )
            return

        try:
            execute_query(
                "UPDATE verification_settings SET username_format = %s WHERE guild_id = %s",
                (nickname_format, guild_id)
            )
            await interaction.response.send_message(
                f"‚úÖ –§–æ—Ä–º–∞—Ç –Ω–∏–∫–Ω–µ–π–º–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: `{nickname_format}`",
                ephemeral=True
            )
        except Exception as e:
            await interaction.response.send_message(f"‚ùå –û—à–∏–±–∫–∞: {e}", ephemeral=True)
