import discord
from discord.ext import commands
from discord import app_commands
import mysql.connector
import os

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("DISCORD_TOKEN")
DB_URL = os.getenv("DATABASE_URL")

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –ë–î
def get_db_connection():
    return mysql.connector.connect(
        host=DB_URL.split('@')[1].split('/')[0].split(':')[0],
        port=DB_URL.split('@')[1].split('/')[0].split(':')[1],
        user=DB_URL.split('//')[1].split(':')[0],
        password=DB_URL.split('//')[1].split(':')[1].split('@')[0],
        database=DB_URL.split('/')[-1]
    )

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –∏–∑ –±–∞–∑—ã
def get_prefix_db(guild_id):
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute("CREATE TABLE IF NOT EXISTS prefixes (guild_id BIGINT PRIMARY KEY, prefix VARCHAR(10))")
    conn.commit()

    cursor.execute("SELECT prefix FROM prefixes WHERE guild_id = %s", (guild_id,))
    result = cursor.fetchone()
    conn.close()
    return result[0] if result else "s!"

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –≤ –±–∞–∑—É
def set_prefix_db(guild_id, prefix):
    conn = get_db_connection()
    cursor = conn.cursor()
    cursor.execute("REPLACE INTO prefixes (guild_id, prefix) VALUES (%s, %s)", (guild_id, prefix))
    conn.commit()
    conn.close()

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ—Ñ–∏–∫—Å–∞
def get_prefix(bot, message):
    if not message.guild:
        return "s!"
    return get_prefix_db(message.guild.id)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤
intents = discord.Intents.default()
intents.message_content = True
intents.guilds = True
intents.members = True

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
bot = commands.Bot(command_prefix=get_prefix, intents=intents)

# ========== –û–ë–´–ß–ù–´–ï –ö–û–ú–ê–ù–î–´ ==========
@bot.command(name="ping")
async def ping_command(ctx):
    await ctx.send(f"üèì –ü–∏–Ω–≥: {round(bot.latency * 1000)} –º—Å")

# ========== –°–õ–≠–® –ö–û–ú–ê–ù–î–´ ==========

@bot.tree.command(name="ping", description="–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∏–Ω–≥–∞ –±–æ—Ç–∞")
async def ping_slash(interaction: discord.Interaction):
    await interaction.response.send_message(f"üèì –ü–∏–Ω–≥: {round(bot.latency * 1000)} –º—Å")

@bot.tree.command(name="prefix", description="–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–µ—Ñ–∏–∫—Å –±–æ—Ç–∞")
@app_commands.describe(new_prefix="–ù–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å (–Ω–∞–ø—Ä–∏–º–µ—Ä, !)")
async def prefix(interaction: discord.Interaction, new_prefix: str):
    if not interaction.guild:
        await interaction.response.send_message("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.", ephemeral=True)
        return

    if not interaction.user.guild_permissions.administrator:
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", ephemeral=True)
        return

    set_prefix_db(interaction.guild.id, new_prefix)
    await interaction.response.send_message(f"‚úÖ –ü—Ä–µ—Ñ–∏–∫—Å –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ `{new_prefix}`")

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥
@bot.event
async def on_ready():
    print(f"‚úÖ –ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω.")
    for guild in bot.guilds:
        try:
            await bot.tree.sync(guild=discord.Object(id=guild.id))
            print(f"üîÅ –°–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ: {guild.name}")
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥ –Ω–∞ {guild.name}: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run(TOKEN)
